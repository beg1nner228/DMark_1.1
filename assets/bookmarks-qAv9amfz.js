import{u as A}from"./theme-DXoqlLxu.js";const D=document.querySelector(".addNewFolder");console.log(D);const U=document.querySelector(".closeBtn"),$=document.querySelector(".js-backdrop"),R=r=>{document.body.classList.add("show-modal"),document.addEventListener("keydown",E),A()},B=r=>{document.body.classList.remove("show-modal"),document.removeEventListener("keydown",E)},x=()=>{document.body.classList.remove("show-modal"),document.removeEventListener("keydown",E)},O=r=>{r.target===r.currentTarget&&B()},E=r=>{r.code==="Escape"&&B()};D.addEventListener("click",R);U.addEventListener("click",B);$.addEventListener("click",O);const I="/DMark_1.1/assets/folder-DogtCluV.svg",q="/DMark_1.1/assets/dashboard-test-CwUSvyjG.svg";localStorage.getItem("dashMarkBookmarks");document.addEventListener("DOMContentLoaded",()=>{const r=document.querySelector(".new-folder-form"),i=document.querySelector(".bookmark-list"),w=document.querySelector(".reset-bookmarksBtnJS"),f=document.querySelector(".BookmarkTitleJS"),g=document.querySelector(".foldersSearchJS");if(!r){console.error("Form .new-folder-form not found in DOM — check your HTML or script loading order.");return}i||console.error("Bookmark container .bookmark-list not found.");const h=localStorage.getItem("dashMarkBookmarks");let m=h?JSON.parse(h):[];w.addEventListener("click",e=>{const t=e.target.closest(".resetBtn").querySelector(".resetImg");t&&t.classList.add("reset_animation"),confirm("Are you sure you want to delete all bookmarks?")?setTimeout(()=>{t&&t.classList.remove("reset_animation"),localStorage.removeItem("dashMarkBookmarks"),location.reload(!0)},1100):(alert("Your data is accessible, we have not deleted anything."),t&&t.classList.remove("reset_animation"))});function S(e){const t=s(),o=(e.links||[]).slice(0,3).map(a=>{const l=n(a.url);return`<img src="${c(l)}" alt="${c(a.title)}" />`}).join("");return Math.max(0,(e.links||[]).length-3),`
            <div class="folder-card" data-folder-name="${c(e.name)}" style="--folder-color: ${t};">
                <div class="folder-header">
                    <img src="${c(e.icon||I)}" alt="folder icon" class="folder-icon"/>
                    <span class="folder-name">${c(e.name)}</span>
                </div>
                <div class="folder-preview-icons">
                    ${o}
                </div>
            </div>
        `}function n(e){try{return`https://www.google.com/s2/favicons?sz=32&domain_url=${new URL(e).hostname}`}catch{return q}}function s(){const e=["var(--accent-purple)","var(--accent-orange)","var(--accent-blue)","var(--accent-green)","var(--accent-red)"];return e[Math.floor(Math.random()*e.length)]}function p(e=""){if(!i)return;const t=m.filter(o=>o.name.toLowerCase().includes(e.toLowerCase()));if(t.length===0)f.classList.remove("unvisible"),i.innerHTML="";else{f.classList.add("unvisible");const o=t.map(S).join("");i.innerHTML=o}}function k(){localStorage.setItem("dashMarkBookmarks",JSON.stringify(m))}function c(e=""){return String(e).replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}function b(e){return new Promise((t,o)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=o,a.readAsDataURL(e)})}function v(){const e=[...r.elements].map(t=>({tag:t.tagName,type:t.type,name:t.name,value:t.value,disabled:t.disabled}));console.log("Form elements snapshot:",e)}r.addEventListener("submit",async e=>{e.preventDefault();const t=new FormData(r),o=t.get("folderName"),a=t.get("bookmarkURL"),l=t.get("bookmarkTitle"),d=t.get("folderIcon"),u=o&&o.toString().trim()||"",y=a&&a.toString().trim()||"",T=l&&l.toString().trim()||y;if(!u){console.warn("Folder name is empty — please fill it");return}if(!y){console.warn("Bookmark URL is empty — please fill it"),alert("Введите URL ссылки");return}try{new URL(y)}catch{alert("Некорректный URL");return}let M=I;if(d&&d instanceof File&&d.size>0)try{M=await b(d)}catch(L){console.warn("Error reading icon file, using default icon",L)}const F={title:T,url:y},C=m.findIndex(L=>L.name.toLowerCase()===u.toLowerCase());if(C!==-1)m[C].links.push(F);else{const L={name:u,icon:M,links:[F]};m.push(L)}k(),p(),r.reset(),x()}),g.addEventListener("input",e=>{const t=e.target.value;p(t)}),p(),m.length===0?f.classList.remove("unvisible"):f.classList.add("unvisible"),window._dumpFolderForm=v,window.renderAllBookmarks=p});document.addEventListener("DOMContentLoaded",()=>{const r=document.querySelector(".main-content"),i=document.querySelector(".js-folder-details-backdrop");document.querySelector(".folder-details-modal");const w=document.querySelector(".folder-details-title"),f=document.querySelector(".folder-name-edit-input"),g=document.querySelector(".folder-links-list"),h=document.querySelector(".delete-folder-btn"),m=document.querySelector(".save-folder-name-btn"),S=document.querySelector(".close-details-modal-btn");let n=-1,s=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[];function p(e){try{return`https://www.google.com/s2/favicons?sz=32&domain_url=${new URL(e).hostname}`}catch{return q}}function k(e=""){return String(e).replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}function c(e){if(g.innerHTML="",!e||!e.links||e.links.length===0){g.innerHTML='<li class="no-links-message">No links in this folder yet.</li>';return}e.links.forEach((t,o)=>{const a=p(t.url),l=document.createElement("li");l.classList.add("folder-link-item"),l.innerHTML=`
                <div class="link-info">
                    <img src="${k(a)}" alt="favicon" class="link-favicon">
                    <a href="${k(t.url)}" target="_blank" rel="noopener noreferrer" class="link-title">${k(t.title)}</a>
                </div>
                <div class="link-actions">
                    <button class="edit-link-btn" data-link-index="${o}" title="Edit Link">
                        <img src="./src/images/edit.svg" alt="Edit" width="18" height="18">
                    </button>
                    <button class="delete-link-btn" data-link-index="${o}" title="Delete Link">
                        <img src="./src/images/delete.svg" alt="Delete" width="18" height="18">
                    </button>
                </div>
            `,g.appendChild(l)})}function b(e){if(s=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[],n=s.findIndex(o=>o.name.toLowerCase()===e.toLowerCase()),n===-1){console.error(`Folder "${e}" not found.`);return}const t=s[n];w.textContent=k(t.name),f.value=k(t.name),c(t),i.classList.add("is-open"),r.classList.add("has-modal-open")}function v(){i.classList.remove("is-open"),r.classList.remove("has-modal-open"),n=-1,window.dispatchEvent(new Event("bookmarksUpdated"))}document.querySelector(".folders-grid").addEventListener("click",e=>{const t=e.target.closest(".folder-card");if(t){const o=t.dataset.folderName;b(o)}}),S.addEventListener("click",v),i.addEventListener("click",e=>{e.target===i&&v()}),document.addEventListener("keydown",e=>{e.key==="Escape"&&i.classList.contains("is-open")&&v()}),h.addEventListener("click",()=>{if(n===-1)return;const e=s[n];confirm(`Are you sure you want to delete the folder "${e.name}" and all its links?`)&&(s.splice(n,1),localStorage.setItem("dashMarkBookmarks",JSON.stringify(s)),v())}),m.addEventListener("click",()=>{if(n===-1)return;const e=s[n].name,t=f.value.trim();if(!t){alert("Folder name cannot be empty.");return}if(t.toLowerCase()===e.toLowerCase()){alert("Folder name is the same.");return}if(s.some((a,l)=>l!==n&&a.name.toLowerCase()===t.toLowerCase())){alert("A folder with this name already exists. Please choose a different name.");return}s[n].name=t,localStorage.setItem("dashMarkBookmarks",JSON.stringify(s)),w.textContent=k(t),alert("Folder name updated successfully!"),window.dispatchEvent(new Event("bookmarksUpdated"))}),g.addEventListener("click",e=>{const t=e.target,o=t.closest(".delete-link-btn"),a=t.closest(".edit-link-btn");if(o){const l=parseInt(o.dataset.linkIndex);if(n!==-1&&!isNaN(l)){const d=s[n],u=d.links[l].title;confirm(`Are you sure you want to delete the link "${u}"?`)&&(d.links.splice(l,1),localStorage.setItem("dashMarkBookmarks",JSON.stringify(s)),c(d))}}else if(a){const l=parseInt(a.dataset.linkIndex);if(n!==-1&&!isNaN(l)){const u=s[n].links[l];alert(`Editing link: ${u.title}
URL: ${u.url}`)}}}),window.addEventListener("bookmarksUpdated",()=>{if(s=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[],window.renderAllBookmarks)window.renderAllBookmarks();else{document.querySelector(".folders-grid").innerHTML="";const e=new Event("DOMContentLoaded");document.dispatchEvent(e)}i.classList.contains("is-open")&&n!==-1&&c(s[n])})});const N=localStorage.getItem("dashMarkBookmarks"),J=document.querySelector(".BookmarkTitleJS");if(N)try{JSON.parse(N).length>0&&J.classList.add("unvisible")}catch(r){console.error("Error parsing dashMarkBookmarks from localStorage:",r)}else console.log("No bookmarks found in localStorage.");
