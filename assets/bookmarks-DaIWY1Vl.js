import{u as A,f as q,n as D,d as N}from"./history-BLTPxMQm.js";const x="/DMark_1.1/assets/edit-D-h-oqsv.svg",R="/DMark_1.1/assets/delete-m1cKfV05.svg",U=document.querySelector(".addNewFolder");console.log(U);const J=document.querySelector(".closeBtn"),O=document.querySelector(".js-backdrop"),H=n=>{document.body.classList.add("show-modal"),document.addEventListener("keydown",M),A()},F=n=>{document.body.classList.remove("show-modal"),document.removeEventListener("keydown",M)},_=()=>{document.body.classList.remove("show-modal"),document.removeEventListener("keydown",M)},j=n=>{n.target===n.currentTarget&&F()},M=n=>{n.code==="Escape"&&F()};U.addEventListener("click",H);J.addEventListener("click",F);O.addEventListener("click",j);localStorage.getItem("dashMarkBookmarks");document.addEventListener("DOMContentLoaded",()=>{const n=document.querySelector(".new-folder-form"),s=document.querySelector(".folders-grid"),S=document.querySelector(".reset-bookmarksBtnJS"),m=document.querySelector(".BookmarkTitleJS"),p=document.querySelector(".foldersSearchJS");if(n||console.error("Form .new-folder-form not found in DOM — check your HTML or script loading order."),!s){console.error("Bookmark container .folders-grid not found.");return}const y=localStorage.getItem("dashMarkBookmarks");let k=y?JSON.parse(y):[];S&&S.addEventListener("click",e=>{const t=e.target.closest(".resetBtn")?.querySelector(".resetImg");t&&t.classList.add("reset_animation"),confirm("Are you sure you want to delete all bookmarks?")?setTimeout(()=>{t&&t.classList.remove("reset_animation"),localStorage.removeItem("dashMarkBookmarks"),location.reload(!0)},1100):(alert("Your data is accessible, we have not deleted anything."),t&&t.classList.remove("reset_animation"))});function E(e){const t=l(),o=(e.links||[]).slice(0,3).map(r=>{const d=i(r.url);return`
                    <a href="${f(r.url)}"
                       target="_blank"
                       rel="noopener noreferrer"
                       data-link-id="${f(r.id)}"
                       data-folder-id="${f(e.id)}"> <img src="${f(d)}" alt="${f(r.title)}" />
                    </a>
                `}).join(""),a=Math.max(0,(e.links||[]).length-3);return`
            <div class="folder-card" data-folder-id="${f(e.id)}" data-folder-name="${f(e.name)}" style="--folder-color: ${t};">
                <div class="folder-header">
                    <img src="${f(e.icon||q)}" alt="folder icon" class="folder-icon"/>
                    <span class="folder-name">${f(e.name)}</span>
                </div>
                <div class="folder-preview-icons">
                    ${o}
                    ${a>0?`<span class="more-links">+${a}</span>`:""}
                </div>
            </div>
        `}function i(e){try{return`https://www.google.com/s2/favicons?sz=32&domain_url=${new URL(e).hostname}`}catch{return N}}function l(){const e=["var(--accent-purple)","var(--accent-orange)","var(--accent-blue)","var(--accent-green)","var(--accent-red)"];return e[Math.floor(Math.random()*e.length)]}function g(e=""){if(!s)return;k=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[];const t=k.filter(o=>o.name.toLowerCase().includes(e.toLowerCase()));if(t.length===0)m&&m.classList.remove("unvisible"),s.innerHTML="";else{m&&m.classList.add("unvisible");const o=t.map(E).join("");s.innerHTML=o}}function L(){localStorage.setItem("dashMarkBookmarks",JSON.stringify(k))}function f(e=""){return String(e).replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}function v(e){return new Promise((t,o)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=o,a.readAsDataURL(e)})}function B(){if(!n)return;const e=[...n.elements].map(t=>({tag:t.tagName,type:t.type,name:t.name,value:t.value,disabled:t.disabled}));console.log("Form elements snapshot:",e)}n?n.addEventListener("submit",async e=>{e.preventDefault();const t=new FormData(n),o=t.get("folderName"),a=t.get("bookmarkURL"),r=t.get("bookmarkTitle"),d=t.get("folderIcon"),c=o&&o.toString().trim()||"",u=a&&a.toString().trim()||"",b=r&&r.toString().trim()||u;if(!c){console.warn("Folder name is empty — please fill it");return}if(!u){console.warn("Bookmark URL is empty — please fill it"),alert("Введите URL ссылки");return}try{new URL(u)}catch{alert("Некорректный URL");return}let I=q;if(d&&d instanceof File&&d.size>0)try{I=await v(d)}catch(h){console.warn("Error reading icon file, using default icon",h)}const $={title:b,url:u,id:D()},C=k.findIndex(h=>h.name.toLowerCase()===c.toLowerCase());if(C!==-1)k[C].links.push($);else{const h={name:c,icon:I,links:[$],id:D()};k.push(h)}L(),g(),n.reset(),_()}):console.warn("Create folder form .new-folder-form not found. Submission will not work."),p&&p.addEventListener("input",e=>{const t=e.target.value;g(t)}),g(),k.length===0?m&&m.classList.remove("unvisible"):m&&m.classList.add("unvisible"),window._dumpFolderForm=B,window.renderAllBookmarks=g,window.addEventListener("bookmarksUpdated",()=>{g()})});function z(n){try{return`https://www.google.com/s2/favicons?sz=32&domain_url=${new URL(n).hostname}`}catch{return N}}function w(n=""){return String(n).replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}document.addEventListener("DOMContentLoaded",()=>{const n=document.querySelector(".main-content"),s=document.querySelector(".js-folder-details-backdrop");document.querySelector(".folder-details-modal");const S=document.querySelector(".folder-details-title"),m=document.querySelector(".folder-name-edit-input"),p=document.querySelector(".folder-links-list"),y=document.querySelector(".delete-folder-btn"),k=document.querySelector(".save-folder-name-btn"),E=document.querySelector(".close-details-modal-btn");let i=null,l=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[];function g(){localStorage.setItem("dashMarkBookmarks",JSON.stringify(l))}function L(e){if(!p){console.error("Folder links list element .folder-links-list not found in modal.");return}if(p.innerHTML="",!e||!e.links||e.links.length===0){p.innerHTML='<li class="no-links-message">No links in this folder yet.</li>';return}e.links.forEach((t,o)=>{const a=z(t.url),r=document.createElement("li");r.classList.add("folder-link-item"),r.innerHTML=`
                <div class="link-info">
                    <img src="${w(a)}" alt="favicon" class="link-favicon">
                    <a href="${w(t.url)}"
                        target="_blank"
                        rel="noopener noreferrer"
                        class="link-title"
                        data-link-id="${w(t.id)}"
                        data-folder-id="${w(e.id)}"> ${w(t.title)}
                    </a>
                </div>
                <div class="link-actions">
                    <button class="edit-link-btn" data-link-index="${o}" title="Edit Link">
                        <img src="${x}" alt="Edit" width="18" height="18">
                    </button>
                    <button class="delete-link-btn" data-link-index="${o}" title="Delete Link">
                        <img src="${R}" alt="Delete" width="18" height="18">
                    </button>
                </div>
            `,p.appendChild(r)})}function f(e){l=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[];const t=l.find(o=>String(o.id)===String(e));if(!t){console.error(`Folder with ID "${e}" not found.`);return}i=t.id,S.textContent=w(t.name),m.value=w(t.name),L(t),s&&s.classList.add("is-open"),n&&n.classList.add("has-modal-open")}function v(){s&&s.classList.remove("is-open"),n&&n.classList.remove("has-modal-open"),i=null,window.dispatchEvent(new Event("bookmarksUpdated"))}const B=document.querySelector(".folders-grid");B?B.addEventListener("click",e=>{const t=e.target.closest(".folder-card");if(t&&!e.target.closest(".folder-actions-btn")){const o=t.dataset.folderId;o?f(o):console.warn("Folder card clicked without data-folder-id:",t)}}):console.warn("Element .folders-grid not found. Folder details modal opening might not work."),E&&E.addEventListener("click",v),s&&s.addEventListener("click",e=>{e.target===s&&v()}),document.addEventListener("keydown",e=>{e.key==="Escape"&&s?.classList.contains("is-open")&&v()}),y?y.addEventListener("click",()=>{if(!i)return;const e=l.findIndex(o=>String(o.id)===String(i));if(e===-1)return;const t=l[e];confirm(`Are you sure you want to delete the folder "${t.name}" and all its links?`)&&(l.splice(e,1),g(),v())}):console.warn("Delete folder button .delete-folder-btn not found."),k?k.addEventListener("click",()=>{if(!i)return;const e=l.findIndex(r=>String(r.id)===String(i));if(e===-1)return;const t=l[e].name,o=m.value.trim();if(!o){alert("Folder name cannot be empty.");return}if(o.toLowerCase()===t.toLowerCase()){alert("Folder name is the same.");return}if(l.some((r,d)=>String(r.id)!==String(i)&&r.name.toLowerCase()===o.toLowerCase())){alert("A folder with this name already exists. Please choose a different name.");return}l[e].name=o,g(),S.textContent=w(o),alert("Folder name updated successfully!"),window.dispatchEvent(new Event("bookmarksUpdated")),v()}):console.warn("Save folder name button .save-folder-name-btn not found."),p?p.addEventListener("click",e=>{const t=e.target,o=t.closest(".delete-link-btn"),a=t.closest(".edit-link-btn"),r=o?.dataset.linkIndex||a?.dataset.linkIndex,d=parseInt(r);if(!i||isNaN(d))return;const c=l.find(u=>String(u.id)===String(i));if(!(!c||!c.links||d>=c.links.length)){if(o){const u=c.links[d].title;confirm(`Are you sure you want to delete the link "${u}"?`)&&(c.links.splice(d,1),g(),L(c),window.dispatchEvent(new Event("bookmarksUpdated")))}else if(a){const u=c.links[d],b=prompt("Enter a new link title: ",u.title);b!==null&&b.trim()!==""&&(u.title=b.trim(),g(),L(c),alert("Link title updated!"),window.dispatchEvent(new Event("bookmarksUpdated")))}}}):console.warn("Folder links list .folder-links-list not found for click delegation."),window.addEventListener("bookmarksUpdated",()=>{if(l=JSON.parse(localStorage.getItem("dashMarkBookmarks"))||[],s?.classList.contains("is-open")&&i){const e=l.find(t=>String(t.id)===String(i));e?L(e):v()}})});const T=localStorage.getItem("dashMarkBookmarks"),G=document.querySelector(".BookmarkTitleJS");if(T)try{JSON.parse(T).length>0&&G.classList.add("unvisible")}catch(n){console.error("Error parsing dashMarkBookmarks from localStorage:",n)}else console.log("No bookmarks found in localStorage.");console.clear();
